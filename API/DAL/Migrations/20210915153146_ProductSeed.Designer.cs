// <auto-generated />
using System;
using DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(ToysGamesContext))]
    [Migration("20210915153146_ProductSeed")]
    partial class ProductSeed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.DbModels.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Companies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            CreatedAt = new DateTime(2021, 9, 15, 15, 31, 45, 485, DateTimeKind.Utc).AddTicks(9898),
                            Guid = new Guid("1ba0cfdd-08a2-436c-82e3-9d88eb3f407e"),
                            Name = "Mattel",
                            UpdatedAt = new DateTime(2021, 9, 15, 15, 31, 45, 486, DateTimeKind.Utc).AddTicks(397)
                        },
                        new
                        {
                            Id = 2,
                            Active = true,
                            CreatedAt = new DateTime(2021, 9, 15, 15, 31, 45, 486, DateTimeKind.Utc).AddTicks(1118),
                            Guid = new Guid("3dd74d2b-d65b-4705-b0d8-19e85e40852c"),
                            Name = "Nintendo",
                            UpdatedAt = new DateTime(2021, 9, 15, 15, 31, 45, 486, DateTimeKind.Utc).AddTicks(1120)
                        });
                });

            modelBuilder.Entity("DAL.DbModels.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("AgeRestriction")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Pic")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PicThumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,0)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Active = true,
                            AgeRestriction = 5,
                            CompanyId = 2,
                            CreatedAt = new DateTime(2021, 9, 15, 15, 31, 45, 487, DateTimeKind.Utc).AddTicks(5834),
                            Description = "Introducing Nintendo Switch Lite, a version of the Nintendo Switch system that’s optimized.",
                            Guid = new Guid("3db642ae-b2b9-48e1-8d77-d64edb235349"),
                            Name = "Nintendo Switch Lite",
                            Pic = "https://m.media-amazon.com/images/I/71qmF0FHj7L._AC_SL1500_.jpg",
                            PicThumbnail = "https://res.cloudinary.com/walmart-labs/image/upload/w_225,dpr_auto,f_auto,q_auto:good/mg/gm/1p/images/product-images/img_large/00004549688228l.jpg",
                            Price = 8600m,
                            UpdatedAt = new DateTime(2021, 9, 15, 15, 31, 45, 487, DateTimeKind.Utc).AddTicks(5846)
                        });
                });

            modelBuilder.Entity("DAL.DbModels.Product", b =>
                {
                    b.HasOne("DAL.DbModels.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("DAL.DbModels.Company", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
